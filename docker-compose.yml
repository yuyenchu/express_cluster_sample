version: '3.8'

services:
  mysql:
    container_name: mysqldb
    image: mysql:latest
    restart: always
    volumes:  
      - "${MYSQL_STORE}:/var/lib/mysql"
      - ./mysql/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    # ports:
    #   - "3306:3306"
    networks:
      web_network:
        ipv4_address: 172.28.0.2
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_PASSWD}

  redis:
    container_name: redisdb
    image: redis:alpine
    command: redis-server /etc/redis/redis.conf 
    restart: always
    volumes:
      - "${REDIS_STORE}:/data"
      - ./redis/redis.conf:/etc/redis/redis.conf:ro
    # ports:
    #   - "6379:6379"
    networks:
      web_network:
        ipv4_address: 172.28.0.4

  web_server:
    container_name: web_server
    image: web_server:latest
    user: 1000:1000
    restart: always
    volumes:
      - ./logs:/app/logs
      - ./config:/app/config # allow hot swap config files
    security_opt:
      - no-new-privileges:true
    networks:
      web_network:
        ipv4_address: 172.28.0.6
    # ports:
    #   - 3000:80
    depends_on:
      - mysql
      - redis
      - traefik
    labels:
      - "traefik.enable=true"
      # http route for localhost only
      - "traefik.http.routers.web_server.rule=Host(`server.localhost`)"
      - "traefik.http.routers.web_server.entrypoints=web"
      - "traefik.http.routers.web_server.service=web_server"
      - "traefik.http.services.web_server.loadbalancer.server.port=80"
      # https route for domain name 
      - "traefik.http.routers.web_server_secure.rule=Host(`${DOMAIN_NAME}`)"
      - "traefik.http.routers.web_server_secure.entrypoints=websecure"
      - "traefik.http.routers.web_server_secure.service=web_server"
      - "traefik.http.routers.web_server_secure.tls.certresolver=web_resolver"
      - "traefik.http.services.web_server_secure.loadbalancer.server.port=80"
  
  prometheus:
    container_name: prometheus
    image: prom/prometheus
    restart: always
    volumes:
      - ${PROM_STORE}:/prometheus
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.size=256MB'
    labels:
      - "traefik.enable=true"
    networks:
      web_network:
        ipv4_address: 172.28.0.8
    logging:
      options:
        max-size: "30m"
        max-file: "3"

  grafana:
    container_name: grafana
    image: grafana/grafana
    restart: always
    volumes:
      - ${GRAFANA_STORE}:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini
    environment:
      - GF_SECURITY_DISABLE_INITIAL_ADMIN_CREATION=true
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
      - GF_PATHS_CONFIG=/etc/grafana/grafana.ini
      - LOCAL_DOMAIN_NAME=${LOCAL_DOMAIN_NAME:-localhost}
      - LOCAL_IP_ADDR=${LOCAL_IP_ADDR:-127.0.0.1}
    networks:
      web_network:
        ipv4_address: 172.28.0.10
    # ports:
    #   - 3001:3000
    depends_on:
      - prometheus
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`grafana.${LOCAL_DOMAIN_NAME:-localhost}`)||(Host(`${LOCAL_IP_ADDR:-127.0.0.1}`) && PathPrefix(`/grafana`))"
      - "traefik.http.routers.grafana.service=grafana"
      - "traefik.http.routers.grafana.entrypoints=web"
      - "traefik.http.routers.grafana.middlewares=ipfilter,auth"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"
    logging:
      options:
        max-size: "30m"
        max-file: "3"  

  jaeger:
    container_name: jaeger
    image: jaegertracing/all-in-one:latest
    restart: always
    environment:
      - COLLECTOR_ZIPKIN_HTTP_PORT=9411
      - SPAN_STORAGE_TYPE=badger
      - BADGER_EPHEMERAL=false
      - BADGER_DIRECTORY_VALUE=/badger/data
      - BADGER_DIRECTORY_KEY=/badger/key
      - QUERY_BASE_PATH=/jaeger
    # ports:
    #   - 16686:16686
    networks:
      web_network:
        ipv4_address: 172.28.0.12
    volumes:
      - ./jaeger:/badger
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.jaeger.rule=Host(`jaeger.${LOCAL_DOMAIN_NAME:-localhost}`)||(Host(`${LOCAL_IP_ADDR:-127.0.0.1}`) && PathPrefix(`/jaeger`))"
      - "traefik.http.routers.jaeger.service=jaeger"
      - "traefik.http.routers.jaeger.entrypoints=web"
      - "traefik.http.routers.jaeger.middlewares=ipfilter,auth"
      - "traefik.http.services.jaeger.loadbalancer.server.port=16686"

  traefik:
    container_name: traefik
    image: traefik:latest
    restart: always
    ports:
      - 8080:80
      - 8081:443
    networks:
      web_network:
        ipv4_address: 172.28.0.20
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik:/traefik
    security_opt:
      - no-new-privileges:true
    command:
      - "--log.level=DEBUG"
      - "--accesslog=true"
      - "--accesslog.filepath=/traefik/logs/access.log"
      - "--api=true"
      - "--api.dashboard=true"
      - "--tracing.jaeger=true"
      - "--tracing.jaeger.samplingServerURL=http://jaeger:5778/sampling"
      - "--tracing.jaeger.localAgentHostPort=jaeger:6831"
      - "--metrics.prometheus=true"
      - "--entryPoints.metrics.address=:8888"
      - "--metrics.prometheus.entryPoint=metrics"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.websecure.http.tls=true"
      - "--entryPoints.websecure.http.tls.domains[0].main=${DOMAIN_NAME}"
      - "--certificatesresolvers.web_resolver.acme.httpchallenge=true"
      - "--certificatesresolvers.web_resolver.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.web_resolver.acme.email=${EMAIL_ADDRESS}"
      - "--certificatesresolvers.web_resolver.acme.storage=/traefik/letsencrypt/acme.json"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.${LOCAL_DOMAIN_NAME:-localhost}`)||(Host(`${LOCAL_IP_ADDR:-127.0.0.1}`) && PathPrefix(`/api`, `/dashboard`))"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.routers.traefik.entrypoints=web"
      - "traefik.http.routers.traefik.middlewares=ipfilter,auth"
      - "traefik.http.middlewares.ipfilter.ipwhitelist.sourcerange=127.0.0.1, ${LAN_SUBNET}"
      - "traefik.http.middlewares.auth.basicauth.usersfile=/traefik/users/usersfile" #admin:password

networks:
  web_network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.28.0.0/16
          gateway: 172.28.0.1
